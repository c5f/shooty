shooty
======

section plan
------------

- tank with movement
- handle wasd/mouse input
  - _gamepad?_
    - input mappings are already configured in the starting project
    - the turret motion follows a hitscan with the mouse, so a separate control strategy
      is required for dual stick
      - this could be a good learning project to publish -- geometry wars
- enemy turret
- projectiles
- hitpoints, damage, destruction
- vfx (smoke, explosions), sfx
- win/lose condition

adding a new class
------------------

i've run into several issues where modifying c++ code from beneath the running editor
session can lead to unexpected behaviour _(missing UPROPERTIES)_ or editor crashes. in
order to alleviate this, this is the workflow for cleaning and rebuilding the project from
the context of creating a new class.

1. create the class (from the unreal editor): `Tools > New C++ Class...`
2. close the unreal editor
3. run the ToonTanksEditor Win64 Developemnt Build build task in vscode
  - _**note:** the ToonTanksEditor Win64 Development Rebuild build task will also clean_
  - _**note:** ToonTanksEditor Win64 Development can be used as a debug launch target_
4. reopen the unreal editor
5. verify changes and continue developing

---

- [project intro](https://www.gamedev.tv/courses/1638644/lectures/39207713)
- [pawn creation](https://www.gamedev.tv/courses/1638644/lectures/39208409)
- [uproperty visibility](https://www.gamedev.tv/courses/1638644/lectures/39256795)
- [timer thunk example](https://www.gamedev.tv/courses/1638644/lectures/39274348)
- [spawn blueprint instance](https://www.gamedev.tv/courses/1638644/lectures/39274364)
- [damage binding](https://www.gamedev.tv/courses/1638644/lectures/39275429)
